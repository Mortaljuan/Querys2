--Query 1: 
SELECT
	F.TITLE
FROM
	FILM AS F
ORDER BY
	F.TITLE ASC
LIMIT
	5;

--Query 2:
SELECT
	CUSTOMER_ID,
	FIRST_NAME,
	AMOUNT,
	PAYMENT_DATE
FROM
	CUSTOMER
	INNER JOIN PAYMENT USING (CUSTOMER_ID)
ORDER BY
	PAYMENT_DATE DESC;

--Query 3:
SELECT
	FILM_ID,
	TITLE,
	INVENTORY_ID
FROM
	FILM
	LEFT JOIN INVENTORY USING (FILM_ID)
ORDER BY
	TITLE;

--Query 4:
SELECT
	F.FILM_ID,
	F.TITLE,
	I.INVENTORY_ID
FROM
	FILM F
	LEFT JOIN INVENTORY I ON F.FILM_ID = I.FILM_ID
WHERE
	I.INVENTORY_ID IS NULL
ORDER BY
	F.TITLE;

--Query 5: 
SELECT
	F.FILM_ID,
	F.TITLE,
	I.INVENTORY_ID
FROM
	FILM F
	RIGHT JOIN INVENTORY I ON F.FILM_ID = I.FILM_ID
ORDER BY
	F.TITLE;

--Query 6: 
SELECT
	F.FILM_ID,
	F.TITLE
FROM
	FILM F
	RIGHT JOIN INVENTORY I USING (FILM_ID)
WHERE
	I.FILM_ID IS NULL
ORDER BY
	F.TITLE;

--Query 7: 
SELECT
	F1.TITLE AS FILM1,
	F2.TITLE AS FILM2,
	F1.LENGTH
FROM
	FILM F1
	INNER JOIN FILM F2 ON F1.LENGTH = F2.LENGTH
WHERE
	F1.FILM_ID > F2.FILM_ID;

--Query 8: (resultado sustituyendo empleado y departamento// por staff y store)
SELECT
	STAFF.FIRST_NAME,
	STORE.STORE_ID
FROM
	STAFF FULL OUTER JOIN STORE ON STAFF.STORE_ID = STORE.STORE_ID;
--Query 9:(mismo caso con el de arriba,por eso los resultados no son tan esperable)
SELECT
	STORE.STORE_ID
FROM
	STAFF
	FULL OUTER JOIN STORE ON STAFF.STORE_ID = STORE.STORE_ID;
--Query 10:(lo mismo que los dos anteriores)
SELECT
	STAFF.FIRST_NAME,
	STAFF.LAST_NAME
FROM
	STAFF
	FULL OUTER JOIN STORE ON STAFF.STORE_ID = STORE.STORE_ID;
--Query 11:(falta una tabla)
--Query 12:
SELECT
	CUSTOMER_ID
FROM
	PAYMENT GROUP BY CUSTOMER_ID
ORDER BY
	CUSTOMER_ID ASC;
--Query 13:
SELECT
	CUSTOMER_ID,
	SUM(AMOUNT) AS TOTAL_PAYMENT
FROM
	PAYMENT
GROUP BY
	CUSTOMER_ID
ORDER BY
	CUSTOMER_ID;
--query 14:
SELECT
	CUSTOMER_ID,
	SUM(AMOUNT) AS TOTAL_PAYMENT
FROM
	PAYMENT
GROUP BY
	CUSTOMER_ID
ORDER BY
	TOTAL_PAYMENT DESC;
--Query 15:
SELECT
	CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME,
	SUM(AMOUNT) AS TOTAL_PAYMENT
FROM
	CUSTOMER
	JOIN PAYMENT USING (CUSTOMER_ID)
GROUP BY
	FULL_NAME
ORDER BY
	TOTAL_PAYMENT DESC;
--Query 16:
SELECT
	STAFF_ID,
	COUNT(*) AS PAYMENT_COUNT
FROM
	PAYMENT
GROUP BY
	STAFF_ID;
--Query 17:
SELECT
	CUSTOMER_ID,
	STAFF_ID,
	SUM(AMOUNT) AS TOTAL_PAYMENT
FROM
	PAYMENT
GROUP BY
	CUSTOMER_ID,
	STAFF_ID
ORDER BY
	CUSTOMER_ID;

--Query 18:
SELECT
	DATE (PAYMENT_DATE) AS PAYMENT_DAY,
	COUNT(*) AS TRANSACTION_COUNT,
	SUM(AMOUNT) AS DAILY_TOTAL
FROM
	PAYMENT
GROUP BY
	PAYMENT_DAY
ORDER BY
	PAYMENT_DAY DESC;
--Query 19:
SELECT
	CUSTOMER_ID,
	SUM(AMOUNT) AS TOTAL_PAYMENT
FROM
	PAYMENT
GROUP BY
	CUSTOMER_ID
HAVING
	SUM(AMOUNT) > 200
ORDER BY
	TOTAL_PAYMENT DESC;

--Query 20:
SELECT
	STORE_ID,
	COUNT(DISTINCT CUSTOMER_ID) AS CUSTOMER_COUNT
FROM
	CUSTOMER
GROUP BY
	STORE_ID
HAVING
	COUNT(DISTINCT CUSTOMER_ID) > 300;